React
__________

JavaScript library. used to create frontend SPA.(Single Page Application).
built by facebook in 2013.

Key Features:
_______________

1)component based architecture.
2)virtual DOM. (react engine will keep a virtual DOM for each components to hold it's state)
3) Reusability.


React  Setup
_______________

Node-runtime environment for JS. 


Creating React App(ViteReact): cmd---> npm create vite@latest



Components: jsx files
________________________

jsx- javaScript xml.

jsx---> combination of both HTML and JS.

function that returns HTML elements.

props(JS variables)---->function---->HTML element.

import and Export Components
________________________________

Expoting:
_____________

export default function.


Importing:
_____________

import variableName from "./filepath"


in react we should mention class name in the attribute "className"



Functional Components
________________________

A JavaScript Function that returns JSX.

props
__________

Props are aruments passed into components. They allow data to be passed from a parent component to a child component.


the value of Inline Styling must be an object and should use only camel case.

we can use curly braces {}  to insert JS  into HTML.
we can use normal braces ()  to insert HTML  into JS.


Default--> only one from a file.
Normal Export---> many.

Importing---> Default--> any name can be assigned. no need for braces.
normal----> correct name should be given and curly braces {} must.

State life cycle(class components)(complexity)
--------------------

state: state is an object in react components that stores dynamic data.


RFC(React Functional Components)(Hooks)(less complex):
------------------------------------------------------------

Hooks are functions that let you use state and other react  features without using class components.


UseState:
__________

Manages States in Functional Components(creating, updating).

syntax:

import {usestate} from react module.

const [var_name,updating_func]=usestate(value)

this updating_function triggers re-rendering.



UseEffect:
__________

Performs side effects in a component.

syntax

importing UseEffect from react.

useEffect(()=>{
    // side Effect functions
},[states name])



UseContext
--------------

React Hooks that allows you to share values between multiple levels of components without passing props.

Provider Components:

1. import {createContext } from "react";
2. export const userContext = createContext();
3.  <userContext.Provider value={userName}>
        <Container1 userName={userName} />
    </userContext.Provider>

Consumer

1. import { useContext } from "react";
2. import { userContext } from "./App";
3. const userName = useContext(userContext);



UseRef
----------

Does not cause re-renders when it's value changes. when you want a information  to be remembered by a component, but you don't want that information to trigger new renders.

{
    current: values
}

It is also used to access/interact with DOM elements.


UseReducer:
-------------------

it is used to manage state more effectively. alternative to useState.


UseLayoutEffect:
------------------------
this hook is  similar to useEffect hook, but it works synchronously after all DOM mutations.








Conditional rendering
-------------------------

allows to render the elements dynamically according to the condition given.

AND Operator---> condition && (element)

Ternary Operator---> condition? (element1) : (element2)


Rendering Lists
________________________

we can use map() function to render an array into HTML.

each element should have unique key value.



React Router DOM
________________________

React Router DOM is a library used for handling routing in react  Application.
It allows you to create SPA with multiple pages without reloading browser.


1.<BrowserRouter> Wraps the entire application to enable routing.

2. <Routes> container for all route definitions.

3. <Route> Define a single route. requires two attributes (path and element)

4. Link- should use this tag instead og "a".